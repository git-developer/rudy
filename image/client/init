#!/bin/sh
set -eu

. "$(dirname "${0}")/usbip-common.sh"
portid_file=/var/run/usbip-client.portids

to_log() {
  # jumping through hoops to fail on error in a POSIX shell:
  set -eu            # shell options from above are not set because we are in a subshell and options do not get inherited
  local output       # return code of subcommand would get lost when 'local' would be declared and assigned in one step
  output="$("${@}")" # return code of subcommand would get lost when piped to tee
  echo "${output}" | tee "${log_file}"
}

detect_bus_ids_from_device_ids() {
  local device_ids="${1}"
  to_log usbip list -r "${USBIP_SERVER}" | sed -nE "s/^\s*([^:]+):.* \((${device_ids})\)$/\1/p"
}

start() {
  log "Starting client..."

  if [ -z "${USBIP_SERVER-}" ]; then
    error "Missing environment variable USBIP_SERVER"
    return 1
  fi
  local bus_ids
  bus_ids="$(detect_bus_ids detect_bus_ids_from_device_ids)"

  log "Attaching ${bus_ids}"
  echo "${bus_ids}" | tr ',' '\n' | xargs -n 1 usbip ${USBIP_DEBUG:+--debug} attach -r "${USBIP_SERVER}" -b || {
    rc="$?"
    log "Attachment failed. Possible causes:"
    log "- Kernel module 'vhci-hcd' is not loaded (try 'modprobe vhci-hcd')"
    log "- No write access to /sys/devices/platform/ (try to run as root)"
    return "${rc}"
  }

  sleep 1
  local ports
  ports="$(to_log usbip ${USBIP_DEBUG:+--debug} port)"
  echo "${ports}" | sed -nE 's/^Port ([^:]+):.*$/\1/p' >>"${portid_file}"
  log "Attached ports: $(xargs -r -a "${portid_file}")"

  log "Attachment complete."
  log "Client is started."
}

stop() {
  log "Stopping client..."
  log "Detaching all ports..."
  if [ -f "${portid_file}" ]; then
    xargs -a "${portid_file}" -n 1 usbip ${USBIP_DEBUG:+--debug} detach -p || true
    rm "${portid_file}"
  fi
  log "Detachment complete."
  log "Client is stopped."
}

main
