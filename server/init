#!/bin/sh
set -eu

. "$(dirname "${0}")/usbip-common.sh"
busid_file=/var/run/usbip-server.busids

detect_bus_ids_from_device_ids() {
  local device_ids="${1}"
  usbip list -p -l | sed -nE "s/busid=(.+)#usbid=(${device_ids})#/\1/p"
}

bind_device() {
  local bus_id="${1}"
  if grep "${bus_id}" "${busid_file}" >/dev/null; then
    log "Skipping binding of ${bus_id} because it is already bound"
  else
    log "Binding ${bus_id}"
    usbip ${USBIP_DEBUG:+--debug} bind -b "${bus_id}" || {
      rc="$?"
      log "Binding failed. Possible causes:"
      log "- Kernel module 'usbip-host' is not loaded (try 'modprobe usbip-host')"
      log "- No write access to /sys/bus/usb/drivers"
      return "${rc}"
    }
    echo "${bus_id}" >>"${busid_file}"
  fi
}


start() {
  log "Starting server..."

  local bus_ids
  bus_ids="$(detect_bus_ids detect_bus_ids_from_device_ids)"

  log "Starting network listener..."
  usbipd ${USBIP_DEBUG:+--debug} 2>&1 >"${log_file}" &
  log "Network listener is started."

  usbip list -r localhost | sed -nE "s/^\s*([^: ]+):.*$/\1/p" >>"${busid_file}"
  [ ! -s "${busid_file}" ] || log "Picking up devices that are already bound: $(xargs -a ${busid_file})"
  echo "${bus_ids}" | while read busid; do bind_device "${busid}"; done

  usbip list -r localhost >"${log_file}"
  log "Server is started."
}

stop() {
  log "Stopping server..."
  log "Unbinding all devices..."
  if [ -f "${busid_file}" ]; then
    xargs -a "${busid_file}" -n 1 usbip ${USBIP_DEBUG:+--debug} unbind -b || true
    rm "${busid_file}"
  fi
  log "Unbinding complete."
  log "Server is stopped."
}

main
